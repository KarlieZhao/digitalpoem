{
  "format": "graph-model",
  "modelTopology": {
    "node": [{
      "name": "x",
      "op": "Placeholder",
      "attr": {
        "dtype": {
          "type": "DT_FLOAT"
        },
        "shape": {
          "shape": {
            "dim": [{
              "size": "-1"
            }, {
              "size": "-1"
            }, {
              "size": "-1"
            }, {
              "size": "16"
            }]
          }
        }
      }
    }, {
      "name": "angle",
      "op": "Placeholder",
      "attr": {
        "dtype": {
          "type": "DT_FLOAT"
        },
        "shape": {
          "shape": {}
        }
      }
    }, {
      "name": "step_size",
      "op": "Placeholder",
      "attr": {
        "shape": {
          "shape": {}
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "fire_rate",
      "op": "Placeholder",
      "attr": {
        "shape": {
          "shape": {}
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "strided_slice/stack",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AAAAAAAAAAAAAAAAAwAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "strided_slice/stack_1",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AAAAAAAAAAAAAAAABAAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "strided_slice/stack_2",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AQAAAAEAAAABAAAAAQAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "strided_slice",
      "op": "StridedSlice",
      "input": ["x", "strided_slice/stack", "strided_slice/stack_1", "strided_slice/stack_2"],
      "attr": {
        "shrink_axis_mask": {
          "i": "0"
        },
        "ellipsis_mask": {
          "i": "0"
        },
        "begin_mask": {
          "i": "7"
        },
        "new_axis_mask": {
          "i": "0"
        },
        "end_mask": {
          "i": "7"
        },
        "T": {
          "type": "DT_FLOAT"
        },
        "Index": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "MaxPool2d",
      "op": "MaxPool",
      "input": ["strided_slice"],
      "attr": {
        "ksize": {
          "list": {
            "i": ["1", "3", "3", "1"]
          }
        },
        "padding": {
          "s": "U0FNRQ=="
        },
        "T": {
          "type": "DT_FLOAT"
        },
        "data_format": {
          "s": "TkhXQw=="
        },
        "strides": {
          "list": {
            "i": ["1", "1", "1", "1"]
          }
        },
        "explicit_paddings": {
          "list": {}
        }
      }
    }, {
      "name": "Greater/y",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {},
            "floatVal": [0.1]
          }
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "Greater",
      "op": "Greater",
      "input": ["MaxPool2d", "Greater/y"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "Func/PartitionedCall/input/_0",
      "op": "Identity",
      "input": ["x"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/stack_1/values_0",
      "op": "Const",
      "attr": {
        "dtype": {
          "type": "DT_FLOAT"
        },
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {
              "dim": [{
                "size": "3"
              }, {
                "size": "3"
              }]
            },
            "tensorContent": "AAAAAAAAAAAAAAAAAAAAAAAAgD8AAAAAAAAAAAAAAAAAAAAA"
          }
        }
      }
    }, {
      "name": "Func/PartitionedCall/input/_1",
      "op": "Identity",
      "input": ["angle"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/Cos",
      "op": "Cos",
      "input": ["Func/PartitionedCall/input/_1"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/mul/y",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {
              "dim": [{
                "size": "3"
              }, {
                "size": "3"
              }]
            },
            "tensorContent": "AAAAvgAAAAAAAAA+AACAvgAAAAAAAIA+AAAAvgAAAAAAAAA+"
          }
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/mul",
      "op": "Mul",
      "input": ["PartitionedCall/Cos", "PartitionedCall/mul/y"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/Sin",
      "op": "Sin",
      "input": ["Func/PartitionedCall/input/_1"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/mul_1/y",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {
              "dim": [{
                "size": "3"
              }, {
                "size": "3"
              }]
            },
            "tensorContent": "AAAAvgAAgL4AAAC+AAAAAAAAAAAAAAAAAAAAPgAAgD4AAAA+"
          }
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/mul_1",
      "op": "Mul",
      "input": ["PartitionedCall/Sin", "PartitionedCall/mul_1/y"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/sub",
      "op": "Sub",
      "input": ["PartitionedCall/mul", "PartitionedCall/mul_1"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/mul_2/y",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {
              "dim": [{
                "size": "3"
              }, {
                "size": "3"
              }]
            },
            "tensorContent": "AAAAvgAAAAAAAAA+AACAvgAAAAAAAIA+AAAAvgAAAAAAAAA+"
          }
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/mul_2",
      "op": "Mul",
      "input": ["PartitionedCall/Sin", "PartitionedCall/mul_2/y"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/mul_3/y",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {
              "dim": [{
                "size": "3"
              }, {
                "size": "3"
              }]
            },
            "tensorContent": "AAAAvgAAgL4AAAC+AAAAAAAAAAAAAAAAAAAAPgAAgD4AAAA+"
          }
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/mul_3",
      "op": "Mul",
      "input": ["PartitionedCall/Cos", "PartitionedCall/mul_3/y"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/add",
      "op": "AddV2",
      "input": ["PartitionedCall/mul_2", "PartitionedCall/mul_3"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/stack_1",
      "op": "Pack",
      "input": ["PartitionedCall/stack_1/values_0", "PartitionedCall/sub", "PartitionedCall/add"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        },
        "axis": {
          "i": "-1"
        },
        "N": {
          "i": "3"
        }
      }
    }, {
      "name": "PartitionedCall/strided_slice/stack",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AAAAAAAAAAAAAAAAAAAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/strided_slice/stack_1",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AAAAAAAAAAAAAAAAAAAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/strided_slice/stack_2",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AQAAAAEAAAABAAAAAQAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/strided_slice",
      "op": "StridedSlice",
      "input": ["PartitionedCall/stack_1", "PartitionedCall/strided_slice/stack", "PartitionedCall/strided_slice/stack_1", "PartitionedCall/strided_slice/stack_2"],
      "attr": {
        "Index": {
          "type": "DT_INT32"
        },
        "T": {
          "type": "DT_FLOAT"
        },
        "shrink_axis_mask": {
          "i": "0"
        },
        "begin_mask": {
          "i": "11"
        },
        "ellipsis_mask": {
          "i": "0"
        },
        "new_axis_mask": {
          "i": "4"
        },
        "end_mask": {
          "i": "11"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/ExpandDims/dim",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {},
            "intVal": [3]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/ExpandDims",
      "op": "ExpandDims",
      "input": ["PartitionedCall/strided_slice", "PartitionedCall/Repeat/ExpandDims/dim"],
      "attr": {
        "Tdim": {
          "type": "DT_INT32"
        },
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Tile/multiples/0",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {},
            "intVal": [1]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Tile/multiples/1",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {},
            "intVal": [1]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Tile/multiples/2",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {},
            "intVal": [1]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/repeats",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {},
            "intVal": [16]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Cast",
      "op": "Cast",
      "input": ["PartitionedCall/Repeat/repeats"],
      "attr": {
        "DstT": {
          "type": "DT_INT32"
        },
        "SrcT": {
          "type": "DT_INT32"
        },
        "Truncate": {
          "b": false
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Reshape/shape_1",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{}]
            }
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Reshape",
      "op": "Reshape",
      "input": ["PartitionedCall/Repeat/Cast", "PartitionedCall/Repeat/Reshape/shape_1"],
      "attr": {
        "T": {
          "type": "DT_INT32"
        },
        "Tshape": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Tile/multiples/4",
      "op": "Const",
      "attr": {
        "dtype": {
          "type": "DT_INT32"
        },
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {},
            "intVal": [1]
          }
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Tile/multiples",
      "op": "Pack",
      "input": ["PartitionedCall/Repeat/Tile/multiples/0", "PartitionedCall/Repeat/Tile/multiples/1", "PartitionedCall/Repeat/Tile/multiples/2", "PartitionedCall/Repeat/Reshape", "PartitionedCall/Repeat/Tile/multiples/4"],
      "attr": {
        "N": {
          "i": "5"
        },
        "T": {
          "type": "DT_INT32"
        },
        "axis": {
          "i": "0"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Tile",
      "op": "Tile",
      "input": ["PartitionedCall/Repeat/ExpandDims", "PartitionedCall/Repeat/Tile/multiples"],
      "attr": {
        "Tmultiples": {
          "type": "DT_INT32"
        },
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Shape",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AwAAAAMAAAABAAAAAwAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice/stack",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }]
            },
            "intVal": [0]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice/stack_1",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }]
            },
            "intVal": [2]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice/stack_2",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }]
            },
            "intVal": [1]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice",
      "op": "StridedSlice",
      "input": ["PartitionedCall/Repeat/Shape", "PartitionedCall/Repeat/strided_slice/stack", "PartitionedCall/Repeat/strided_slice/stack_1", "PartitionedCall/Repeat/strided_slice/stack_2"],
      "attr": {
        "shrink_axis_mask": {
          "i": "0"
        },
        "begin_mask": {
          "i": "1"
        },
        "ellipsis_mask": {
          "i": "0"
        },
        "new_axis_mask": {
          "i": "0"
        },
        "end_mask": {
          "i": "0"
        },
        "T": {
          "type": "DT_INT32"
        },
        "Index": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice_1/stack",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }]
            },
            "intVal": [2]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice_1/stack_1",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }]
            },
            "intVal": [3]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice_1/stack_2",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }]
            },
            "intVal": [1]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice_1",
      "op": "StridedSlice",
      "input": ["PartitionedCall/Repeat/Shape", "PartitionedCall/Repeat/strided_slice_1/stack", "PartitionedCall/Repeat/strided_slice_1/stack_1", "PartitionedCall/Repeat/strided_slice_1/stack_2"],
      "attr": {
        "shrink_axis_mask": {
          "i": "1"
        },
        "begin_mask": {
          "i": "0"
        },
        "ellipsis_mask": {
          "i": "0"
        },
        "new_axis_mask": {
          "i": "0"
        },
        "end_mask": {
          "i": "0"
        },
        "Index": {
          "type": "DT_INT32"
        },
        "T": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/mul",
      "op": "Mul",
      "input": ["PartitionedCall/Repeat/Reshape", "PartitionedCall/Repeat/strided_slice_1"],
      "attr": {
        "T": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/concat/values_1",
      "op": "Pack",
      "input": ["PartitionedCall/Repeat/mul"],
      "attr": {
        "T": {
          "type": "DT_INT32"
        },
        "axis": {
          "i": "0"
        },
        "N": {
          "i": "1"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice_2/stack",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }]
            },
            "intVal": [3]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice_2/stack_1",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }]
            },
            "intVal": [0]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice_2/stack_2",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }]
            },
            "intVal": [1]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/strided_slice_2",
      "op": "StridedSlice",
      "input": ["PartitionedCall/Repeat/Shape", "PartitionedCall/Repeat/strided_slice_2/stack", "PartitionedCall/Repeat/strided_slice_2/stack_1", "PartitionedCall/Repeat/strided_slice_2/stack_2"],
      "attr": {
        "end_mask": {
          "i": "1"
        },
        "Index": {
          "type": "DT_INT32"
        },
        "T": {
          "type": "DT_INT32"
        },
        "shrink_axis_mask": {
          "i": "0"
        },
        "begin_mask": {
          "i": "0"
        },
        "ellipsis_mask": {
          "i": "0"
        },
        "new_axis_mask": {
          "i": "0"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/concat/axis",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {},
            "intVal": [0]
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/concat",
      "op": "ConcatV2",
      "input": ["PartitionedCall/Repeat/strided_slice", "PartitionedCall/Repeat/concat/values_1", "PartitionedCall/Repeat/strided_slice_2", "PartitionedCall/Repeat/concat/axis"],
      "attr": {
        "Tidx": {
          "type": "DT_INT32"
        },
        "T": {
          "type": "DT_INT32"
        },
        "N": {
          "i": "3"
        }
      }
    }, {
      "name": "PartitionedCall/Repeat/Reshape_1",
      "op": "Reshape",
      "input": ["PartitionedCall/Repeat/Tile", "PartitionedCall/Repeat/concat"],
      "attr": {
        "Tshape": {
          "type": "DT_INT32"
        },
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "PartitionedCall/depthwise",
      "op": "DepthwiseConv2dNative",
      "input": ["Func/PartitionedCall/input/_0", "PartitionedCall/Repeat/Reshape_1"],
      "attr": {
        "dilations": {
          "list": {
            "i": ["1", "1", "1", "1"]
          }
        },
        "T": {
          "type": "DT_FLOAT"
        },
        "data_format": {
          "s": "TkhXQw=="
        },
        "strides": {
          "list": {
            "i": ["1", "1", "1", "1"]
          }
        },
        "explicit_paddings": {
          "list": {}
        },
        "padding": {
          "s": "U0FNRQ=="
        }
      }
    }, {
      "name": "PartitionedCall/Identity",
      "op": "Identity",
      "input": ["PartitionedCall/depthwise"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "Func/PartitionedCall/output/_2",
      "op": "Identity",
      "input": ["PartitionedCall/Identity"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "sequential_4/conv2d_8/Conv2D/ReadVariableOp/resource",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }, {
                "size": "1"
              }, {
                "size": "48"
              }, {
                "size": "128"
              }]
            },
            "tensorContent": ""
          }
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "sequential_4/conv2d_8/Conv2D/ReadVariableOp",
      "op": "Identity",
      "input": ["sequential_4/conv2d_8/Conv2D/ReadVariableOp/resource"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "sequential_4/conv2d_8/Conv2D",
      "op": "Conv2D",
      "input": ["Func/PartitionedCall/output/_2", "sequential_4/conv2d_8/Conv2D/ReadVariableOp"],
      "attr": {
        "use_cudnn_on_gpu": {
          "b": true
        },
        "explicit_paddings": {
          "list": {}
        },
        "padding": {
          "s": "VkFMSUQ="
        },
        "dilations": {
          "list": {
            "i": ["1", "1", "1", "1"]
          }
        },
        "T": {
          "type": "DT_FLOAT"
        },
        "strides": {
          "list": {
            "i": ["1", "1", "1", "1"]
          }
        },
        "data_format": {
          "s": "TkhXQw=="
        }
      }
    }, {
      "name": "sequential_4/conv2d_8/BiasAdd/ReadVariableOp/resource",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {
              "dim": [{
                "size": "128"
              }]
            },
            "tensorContent": "+esOPaRSpTwwPoW7lxp0PfSUZr4PEN28OWXJvO1L3Dt0eVa9S3BUvUDduz3t73e8raqKPK8Xpbynfsw5pS/ePCT7pzzFmRi9MiTdvMs4WLsjYpo8wPHsuwm1UDqxHgI8fv/kPAqNk7w46QA9LzHZO6IxeTycxTI92vARvMaJtTzdoFe9n3havsiXS7uXiAq+jU+9vF4izT0C4S87iTx/PMkVy7zWI6C8cNGzvd7JLrwrvYc7RduyvUI36Ll6EAC+kzUtPUlaZb3X9RQ87bnTPNocG71PZuw6xf3APCX/kDyrMDe7Z2rGPKLTmr5tGEE9Tz9tO6Fx2b2yo8S7nIOjvcC+xbzPUG49s2a7vvN0nbuaCnQ9fDj9vaVrmzwzaT48mpVfu5K82zxrH6i8iU7jvdgajTxPwco8/vJkvY+OBbzdKs88M4XXvVrcH77ypG+8bI0wPbTBErtNEUG+QhofPaE3UD0lWUQ868qEvayyhzxd7IC4/VHOvcMdiz2d2im+yx4VPVXcQr3ttV49f/bgvPAakT03Xwu96lubPDsjsrypM7K9DTmKu/2bDLwcxoW99lIWPcfmej2Qgbm9JW1ovU6nOj1yuwQ9vdirvc3R6r32mdi5zSi7vOymoLwBYI29ALCNvD4uyjt5sVY9aZeDvtYHFr5D/J48TCi9PRWWsbw="
          }
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "sequential_4/conv2d_8/BiasAdd/ReadVariableOp",
      "op": "Identity",
      "input": ["sequential_4/conv2d_8/BiasAdd/ReadVariableOp/resource"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "sequential_4/conv2d_8/BiasAdd",
      "op": "BiasAdd",
      "input": ["sequential_4/conv2d_8/Conv2D", "sequential_4/conv2d_8/BiasAdd/ReadVariableOp"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        },
        "data_format": {
          "s": "TkhXQw=="
        }
      }
    }, {
      "name": "sequential_4/conv2d_8/Relu",
      "op": "Relu",
      "input": ["sequential_4/conv2d_8/BiasAdd"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "sequential_4/conv2d_9/Conv2D/ReadVariableOp/resource",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {
              "dim": [{
                "size": "1"
              }, {
                "size": "1"
              }, {
                "size": "128"
              }, {
                "size": "16"
              }]
            },
            "tensorContent": ""
          }
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "sequential_4/conv2d_9/Conv2D/ReadVariableOp",
      "op": "Identity",
      "input": ["sequential_4/conv2d_9/Conv2D/ReadVariableOp/resource"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "sequential_4/conv2d_9/Conv2D",
      "op": "Conv2D",
      "input": ["sequential_4/conv2d_8/Relu", "sequential_4/conv2d_9/Conv2D/ReadVariableOp"],
      "attr": {
        "dilations": {
          "list": {
            "i": ["1", "1", "1", "1"]
          }
        },
        "T": {
          "type": "DT_FLOAT"
        },
        "strides": {
          "list": {
            "i": ["1", "1", "1", "1"]
          }
        },
        "data_format": {
          "s": "TkhXQw=="
        },
        "explicit_paddings": {
          "list": {}
        },
        "use_cudnn_on_gpu": {
          "b": true
        },
        "padding": {
          "s": "VkFMSUQ="
        }
      }
    }, {
      "name": "sequential_4/conv2d_9/BiasAdd/ReadVariableOp/resource",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {
              "dim": [{
                "size": "16"
              }]
            },
            "tensorContent": "xfmRO3BSkrsmaus7WZdJPeOmlTxzuY+8sVUiPAkDh734z1W9vUoMvDe3gjweDpM8A/CIvTxI3rqeA2A9BbwIvQ=="
          }
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "sequential_4/conv2d_9/BiasAdd/ReadVariableOp",
      "op": "Identity",
      "input": ["sequential_4/conv2d_9/BiasAdd/ReadVariableOp/resource"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "sequential_4/conv2d_9/BiasAdd",
      "op": "BiasAdd",
      "input": ["sequential_4/conv2d_9/Conv2D", "sequential_4/conv2d_9/BiasAdd/ReadVariableOp"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        },
        "data_format": {
          "s": "TkhXQw=="
        }
      }
    }, {
      "name": "mul",
      "op": "Mul",
      "input": ["sequential_4/conv2d_9/BiasAdd", "step_size"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "strided_slice_1/stack",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AAAAAAAAAAAAAAAAAAAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "strided_slice_1/stack_1",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AAAAAAAAAAAAAAAAAQAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "strided_slice_1/stack_2",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AQAAAAEAAAABAAAAAQAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "strided_slice_1",
      "op": "StridedSlice",
      "input": ["x", "strided_slice_1/stack", "strided_slice_1/stack_1", "strided_slice_1/stack_2"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        },
        "Index": {
          "type": "DT_INT32"
        },
        "shrink_axis_mask": {
          "i": "0"
        },
        "begin_mask": {
          "i": "15"
        },
        "ellipsis_mask": {
          "i": "0"
        },
        "new_axis_mask": {
          "i": "0"
        },
        "end_mask": {
          "i": "7"
        }
      }
    }, {
      "name": "Shape",
      "op": "Shape",
      "input": ["strided_slice_1"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        },
        "out_type": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "random_uniform/RandomUniform",
      "op": "RandomUniform",
      "input": ["Shape"],
      "attr": {
        "seed": {
          "i": "0"
        },
        "T": {
          "type": "DT_INT32"
        },
        "dtype": {
          "type": "DT_FLOAT"
        },
        "seed2": {
          "i": "0"
        }
      }
    }, {
      "name": "LessEqual",
      "op": "LessEqual",
      "input": ["random_uniform/RandomUniform", "fire_rate"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "Cast",
      "op": "Cast",
      "input": ["LessEqual"],
      "attr": {
        "Truncate": {
          "b": false
        },
        "DstT": {
          "type": "DT_FLOAT"
        },
        "SrcT": {
          "type": "DT_BOOL"
        }
      }
    }, {
      "name": "mul_1",
      "op": "Mul",
      "input": ["mul", "Cast"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "add",
      "op": "AddV2",
      "input": ["x", "mul_1"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "strided_slice_2/stack",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AAAAAAAAAAAAAAAAAwAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "strided_slice_2/stack_1",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AAAAAAAAAAAAAAAABAAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "strided_slice_2/stack_2",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_INT32",
            "tensorShape": {
              "dim": [{
                "size": "4"
              }]
            },
            "tensorContent": "AQAAAAEAAAABAAAAAQAAAA=="
          }
        },
        "dtype": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "strided_slice_2",
      "op": "StridedSlice",
      "input": ["add", "strided_slice_2/stack", "strided_slice_2/stack_1", "strided_slice_2/stack_2"],
      "attr": {
        "shrink_axis_mask": {
          "i": "0"
        },
        "ellipsis_mask": {
          "i": "0"
        },
        "begin_mask": {
          "i": "7"
        },
        "new_axis_mask": {
          "i": "0"
        },
        "end_mask": {
          "i": "7"
        },
        "T": {
          "type": "DT_FLOAT"
        },
        "Index": {
          "type": "DT_INT32"
        }
      }
    }, {
      "name": "MaxPool2d_1",
      "op": "MaxPool",
      "input": ["strided_slice_2"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        },
        "data_format": {
          "s": "TkhXQw=="
        },
        "strides": {
          "list": {
            "i": ["1", "1", "1", "1"]
          }
        },
        "explicit_paddings": {
          "list": {}
        },
        "ksize": {
          "list": {
            "i": ["1", "3", "3", "1"]
          }
        },
        "padding": {
          "s": "U0FNRQ=="
        }
      }
    }, {
      "name": "Greater_1/y",
      "op": "Const",
      "attr": {
        "value": {
          "tensor": {
            "dtype": "DT_FLOAT",
            "tensorShape": {},
            "floatVal": [0.1]
          }
        },
        "dtype": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "Greater_1",
      "op": "Greater",
      "input": ["MaxPool2d_1", "Greater_1/y"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "and",
      "op": "LogicalAnd",
      "input": ["Greater", "Greater_1"]
    }, {
      "name": "Cast_1",
      "op": "Cast",
      "input": ["and"],
      "attr": {
        "DstT": {
          "type": "DT_FLOAT"
        },
        "SrcT": {
          "type": "DT_BOOL"
        },
        "Truncate": {
          "b": false
        }
      }
    }, {
      "name": "mul_2",
      "op": "Mul",
      "input": ["add", "Cast_1"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }, {
      "name": "Identity",
      "op": "Identity",
      "input": ["mul_2", "^sequential_4/conv2d_8/BiasAdd/ReadVariableOp", "^sequential_4/conv2d_8/Conv2D/ReadVariableOp", "^sequential_4/conv2d_9/BiasAdd/ReadVariableOp", "^sequential_4/conv2d_9/Conv2D/ReadVariableOp"],
      "attr": {
        "T": {
          "type": "DT_FLOAT"
        }
      }
    }],
    "versions": {
      "producer": "1.14",
      "minConsumer": "1.14"
    }
  },
  "weightsManifest": []
}
